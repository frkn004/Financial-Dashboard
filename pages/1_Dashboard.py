import streamlit as stimport pandas as pdfrom utils.data_loader import load_data, calculate_metrics, get_expense_breakdownfrom utils.charts import (create_profit_loss_chart, create_expense_chart,                          create_sales_trend_chart)from utils.helpers import format_currency, generate_insightsfrom utils.helpers import calculate_growthdef show_dashboard():    st.title("ðŸ“Š Dashboard")    if 'data' not in st.session_state or st.session_state.data is None:        st.info("ðŸ‘† LÃ¼tfen sol menÃ¼den bir veri dosyasÄ± yÃ¼kleyin.")        return    data = st.session_state.data    metrics = calculate_metrics(data)    if metrics:        # Ã–zet metrikler        show_summary_metrics(metrics)        # Ana grafikler        col1, col2 = st.columns(2)        with col1:            profit_chart = create_profit_loss_chart(data, metrics)            if profit_chart:                st.plotly_chart(profit_chart, use_container_width=True)        with col2:            sales_chart = create_sales_trend_chart(metrics)            if sales_chart:                st.plotly_chart(sales_chart, use_container_width=True)        # Gider analizi        st.subheader("ðŸ’° Gider Analizi")        expense_data = get_expense_breakdown(data)        if expense_data is not None:            expense_chart = create_expense_chart(data, expense_data)            if expense_chart:                st.plotly_chart(expense_chart, use_container_width=True)        # Ä°Ã§gÃ¶rÃ¼ler        st.subheader("ðŸ’¡ Ã–nemli Ä°Ã§gÃ¶rÃ¼ler")        insights = generate_insights(metrics)        for insight in insights:            st.info(insight)def show_summary_metrics(metrics):    col1, col2, col3, col4 = st.columns(4)    with col1:        st.metric(            "Toplam SatÄ±ÅŸ",            format_currency(metrics['total_sales']),            f"{calculate_growth(metrics['monthly_sales'][-1], metrics['monthly_sales'][-2]):+.1f}%"        )    with col2:        st.metric(            "Toplam Gider",            format_currency(metrics['total_expenses']),            f"{calculate_growth(metrics['monthly_expenses'][-1], metrics['monthly_expenses'][-2]):+.1f}%"        )    with col3:        st.metric(            "Net Kar",            format_currency(metrics['profit']),            f"{metrics['margin']:.1f}%"        )    with col4:        target_margin = 15        st.metric(            "Kar MarjÄ±",            f"%{metrics['margin']:.1f}",            f"{metrics['margin'] - target_margin:+.1f}%"        )if __name__ == "__main__":    show_dashboard()